package unit2.decomposition;

public class Task13 {
    //13. Два простых числа называются «близнецами», если они отличаются друг от друга на 2 (например, 41 и 43). Найти и напечатать все пары «близнецов» из отрезка [n,2n], где n - заданное натуральное число больше 2. Для решения задачи использовать декомпозицию.
    static void task13(int n) {
        for (int i = n; i < (n * 2) - 1; i++) {
            if (isPrime(i) && isPrime(i + 2)) {
                System.out.printf("%d %d\n", i,i + 2);
            }
        }
    }

    private static boolean isPrime(int n) {
        //Переменная хранящая информацию о том, является ли число простым
        boolean result = true;
        //нет смысла двигаться дальше половины числа N, т.к. на число больше половины N само N точно не может делиться
        for (int i = 2; i <= n / 2; ++i) {
            //если число делить на другое число (не себя и не 1) без остатка , то оно не простое
            if (n % i == 0) {
                result = false;
                break;
            }
        }
        return result;
    }
}

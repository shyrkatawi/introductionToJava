1. Опишите процедуру инициализации полей класса и полей экземпляра класса. Когда инициализируются поля класса,
а когда – поля экземпляров класса. Какие значения присваиваются полям по умолчанию? Где еще в классе полям
могут быть присвоены начальные значения?
2. Дайте определение перегрузке методов. Как вы думаете, чем удобна перегрузка методов? Укажите, какие методы
могут перегружаться, и какими методами они могут быть перегружены? Можно ли перегрузить методы в базовом и
производном классах? Можно ли private метод базового класса перегрузить public методов производного? Можно ли
перегрузить конструкторы, и можно ли при перегрузке конструкторов менять атрибуты доступа у конструкторов?
3. Объясните, что такое раннее и позднее связывание? Перегрузка – это раннее или позднее связывание? Объясните
правила, которым следует компилятор при разрешении перегрузки; в том числе, если методы перегружаются
примитивными типами, между которыми возможно неявное приведение или ссылочными типами, состоящими в
иерархической связи.
4. Объясните, как вы понимаете, что такое неявная ссылка this? В каких методах эта ссылка присутствует, а в каких –
нет, и почему?
5. Что такое финальные поля, какие поля можно объявить со спецификатором final? Где можно инициализировать
финальные поля?
6. Что такое статические поля, статические финальные поля и статические методы. К чему имеют доступ статические
методы? Можно ли перегрузить и переопределить статические методы? Наследуются ли статические методы?
7. Что такое логические и статические блоки инициализации? Сколько их может быть в классе, в каком порядке они
могут быть размещены и в каком порядке вызываются?
8. Что представляют собой методы с переменным числом параметров, как передаются параметры в такие методы и что
представляет собой такой параметр в методе? Как осуществляется выбор подходящего метода, при использовании
перегрузки для методов с переменным числом параметров?
9. Чем является класс Object? Перечислите известные вам методы класса Object, укажите их назначение.
10. Что такое хэш-значение? Объясните, почему два разных объекта могут сгенерировать одинаковые хэш-коды?
11. Что такое объект класса Class? Чем использование метода getClass() и последующего сравнения возвращенного
значения с Type.class отличается от использования оператора instanceof?
12. Укажите правила переопределения методов equals(), hashCode() и toString().


private методы не наследуются
Поля в Java не являются полиморфными, поэтому будет обращение к полю на основе типа ссылочной переменной.
В иерархии классов конструкторы вызываются в порядке наследования, начиная с суперкласса и заканчивая подклассом.

Статические методы нельзя переопределять. При их вызове будет использоваться механизм раннего связывания, поэтому будет вызван метод на основе типа ссылочной переменной (метод класса Base).
SubmitSome problems have options such as save, reset, hints, or show answer. These options follow the Submit button.